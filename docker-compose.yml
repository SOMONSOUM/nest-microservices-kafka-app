services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ENABLE_KRAFT: 'yes'
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - '9094:9094'
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_READONLY: false
      KAFKA_CLUSTERS_0_TOPIC_AUTO_CREATE: true
    ports:
      - '8080:8080'
    depends_on:
      - kafka
    networks:
      - kafka-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: devteam
      MYSQL_PASSWORD: soksan
      MYSQL_DATABASE: testdb
    volumes:
      - mysql_data:/var/lib/mysql

  logstash:
    image: logstash:9.0.1
    container_name: logstash
    ports:
      - '5001:5000'
      - '9600:9600'
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
  elasticsearch:
    image: elasticsearch:9.0.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - '9200:9200'
      - '9300:9300'

  kibana:
    image: kibana:9.0.1
    container_name: kibana
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3002:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - elasticsearch

volumes:
  mysql_data:
  grafana-storage:

networks:
  kafka-network:
    driver: bridge
